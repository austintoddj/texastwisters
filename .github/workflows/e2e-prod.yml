name: Production E2E

# NOTE: This workflow runs AFTER code is pushed to `main` (i.e. post-merge).
# It performs a production build and runs the full Playwright suite against the started
# production server. Because it triggers on `push` to `main`, it does NOT by itself
# prevent a PR from being merged into `main` before tests run.
#
# To ensure full end-to-end tests run BEFORE a PR is merged into `main`, require the
# `Premerge Full E2E` job from `.github/workflows/build.yml` (job name: "Premerge Full E2E (PR -> main)")
# as a required status check in GitHub branch protection for `main`. That job runs on pull
# requests targeting `main` and will block merging until it succeeds.
#
# Keep this workflow as an additional post-merge verification step (and as a safety net),
# but rely on the `premerge-e2e` job for gating merges to `main`.

on:
  push:
    branches: [main]

concurrency:
  group: e2e-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-prod:
    name: Full E2E against production start
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers (if cache miss)
        run: npx playwright install --with-deps

      - name: Build production
        run: npm run build

      # Sentry sourcemaps are uploaded by the Next.js Sentry webpack plugin (withSentryConfig)
      # during the build step when the appropriate SENTRY_* secrets are set. We avoid duplicate
      # uploads by not running sentry-cli here.

      - name: Start production server and run Playwright (full)
        run: |
          npx start-server-and-test 'npm run start' http://localhost:3000 'npx playwright test --reporter=list --reporter=html'
        env:
          CI: true

      # No artifact uploads by default (per project preference). Add upload-artifact steps here if debugging is needed.
