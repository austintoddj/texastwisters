name: tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  unit:
    name: Unit Tests (Node ${{ matrix.node-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: ['20.x', '22.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:unit -- --coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage/

  e2e:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: [unit]
    strategy:
      matrix:
        browser: ['chromium', 'firefox', 'webkit']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (${{ matrix.browser }})
        run: |
          npx start-server-and-test 'npm run start' http://localhost:3000 "npx playwright test --project=${{ matrix.browser }}"

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/

      - name: Upload Playwright JUnit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: results.xml
